package com.example.azure;

import java.util.logging.Logger;

import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.azure.security.keyvault.secrets.SecretClient;

import jakarta.annotation.PostConstruct;
import lombok.Getter;

@Component
public class DBSecretLoader {

    private final SecretClient secretClient;

    private String dbUrl;
    private String dbUser;
    private String dbPassword;

    public DBSecretLoader(SecretClient secretClient) {
        this.secretClient = secretClient;
    }

    @PostConstruct
    public void loadSecrets() {
        this.dbUrl = secretClient.getSecret("spring-datasource-url").getValue();
        this.dbUser = secretClient.getSecret("spring-datasource-username").getValue();
        this.dbPassword = secretClient.getSecret("spring-datasource-password").getValue();
        System.out.println("=== Loaded DB Secrets ===");
        System.out.println("DB URL      : " + dbUrl);
        System.out.println("DB Username : " + dbUser);
        System.out.println("DB Password : " + dbPassword);
    }

    public String getDbUrl() {
        return dbUrl;
    }

    public String getDbUser() {
        return dbUser;
    }

    public String getDbPassword() {
        return dbPassword;
    }
}

package com.example.azure;

import javax.sql.DataSource;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import com.zaxxer.hikari.HikariDataSource;

@Configuration
public class DataSourceConfig {

    private final DBSecretLoader dbSecretLoader;

    public DataSourceConfig(DBSecretLoader dbSecretLoader) {
        this.dbSecretLoader = dbSecretLoader;
    }

    @Bean
    public DataSource dataSource() {
        HikariDataSource ds = new HikariDataSource();
        ds.setJdbcUrl(dbSecretLoader.getDbUrl());
        ds.setUsername(dbSecretLoader.getDbUser());
        ds.setPassword(dbSecretLoader.getDbPassword());
        return ds;
    }
}
